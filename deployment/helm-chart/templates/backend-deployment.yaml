apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "genai-cloudops.fullname" . }}-backend
  labels:
    {{- include "genai-cloudops.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount | default .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "genai-cloudops.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/backend-configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      labels:
        {{- include "genai-cloudops.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "genai-cloudops.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "genai-cloudops.fullname" . }}-secrets
                  key: database-url
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "genai-cloudops.fullname" . }}-secrets
                  key: secret-key
            - name: GROQ_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "genai-cloudops.fullname" . }}-secrets
                  key: groq-api-key
                  optional: true
            {{- range .Values.backend.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "genai-cloudops.fullname" . }}-backend-config
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          volumeMounts:
            - name: oci-config
              mountPath: /root/.oci
              readOnly: true
            {{- if .Values.backend.persistence.enabled }}
            - name: backend-storage
              mountPath: /app/data
            {{- end }}
      volumes:
        - name: oci-config
          secret:
            secretName: {{ include "genai-cloudops.fullname" . }}-oci-config
            optional: true
        {{- if .Values.backend.persistence.enabled }}
        - name: backend-storage
          persistentVolumeClaim:
            claimName: {{ include "genai-cloudops.fullname" . }}-backend-pvc
        {{- end }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "genai-cloudops.fullname" . }}-backend
  labels:
    {{- include "genai-cloudops.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
    - port: {{ .Values.backend.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "genai-cloudops.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: backend 