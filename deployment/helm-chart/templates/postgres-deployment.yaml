{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "genai-cloudops.fullname" . }}-postgres
  labels:
    {{- include "genai-cloudops.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1  # PostgreSQL should be single instance
  strategy:
    type: Recreate  # Important for database with persistent storage
  selector:
    matchLabels:
      {{- include "genai-cloudops.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "genai-cloudops.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      serviceAccountName: {{ include "genai-cloudops.serviceAccountName" . }}
      securityContext:
        fsGroup: 999  # PostgreSQL group
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database | default "genai_cloudops" | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.username | default "postgres" | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "genai-cloudops.fullname" . }}-secrets
                  key: postgres-password
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U {{ .Values.postgres.username | default "postgres" | quote }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U {{ .Values.postgres.username | default "postgres" | quote }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            {{- if .Values.postgres.initScripts }}
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
            {{- end }}
      volumes:
        - name: postgres-storage
          {{- if .Values.postgres.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "genai-cloudops.fullname" . }}-postgres-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.postgres.initScripts }}
        - name: init-scripts
          configMap:
            name: {{ include "genai-cloudops.fullname" . }}-postgres-init
        {{- end }}
      {{- with .Values.postgres.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "genai-cloudops.fullname" . }}-postgres
  labels:
    {{- include "genai-cloudops.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: postgres
      protocol: TCP
      name: postgres
  selector:
    {{- include "genai-cloudops.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: database
---
{{- if .Values.postgres.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "genai-cloudops.fullname" . }}-postgres-pvc
  labels:
    {{- include "genai-cloudops.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  accessModes:
    - {{ .Values.postgres.persistence.accessMode | default "ReadWriteOnce" }}
  {{- if .Values.postgres.persistence.storageClass }}
  {{- if (eq "-" .Values.postgres.persistence.storageClass) }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ .Values.postgres.persistence.storageClass }}
  {{- end }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.postgres.persistence.size | default "10Gi" }}
{{- end }}
{{- end }} 